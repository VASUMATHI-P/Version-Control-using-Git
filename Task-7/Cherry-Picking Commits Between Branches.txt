 ----------------------------------------
| Cherry-Picking Commits Between Branches |
------------------------------------------

=> Cherry-picking allows you to selectively apply a specific commit from one branch to another without merging the entire branch.

1. Initialize a git repo and make initial commit with login feature

git init
git checkout -b main
echo "Initial login system" > login.txt
git add login.txt
git commit -m "Basic login system"

-----------------------------------------------------------------------------
2. Switching to new branch to create OAuth feature

git checkout -b oAuth-feature
echo "Adding OAuth feature to login page" >> login.txt
git add login.txt
git commit -m "OAuth Authentication added"

-----------------------------------------------------------------------------
3. Fixing a Login issue from oAuth-feature branch

echo "Fix SQL injection issue" >> login.txt
git add login.txt
git commit -m "Fixed SQL injection vulnerability"

-----------------------------------------------------------------------------
4. Verify the commit history

git log --oneline --graph --all
* a4445fe (HEAD -> oAuth-feature) Fixed SQL injection vulnerability
* 527832f OAuth Authenitication added
* 8e5eb53 (main) Basic login system

-----------------------------------------------------------------------------
5. Cherry-pick the bug fixed commit (a4445fe) from the main branch

git checkout main
git cherry-pick a4445fe

#CONFlICT occurred
Auto-merging login.txt
CONFLICT (content): Merge conflict in login.txt
error: could not apply a4445fe... Fixed SQL injection vulnerability

git diff

=> diff --cc login.txt
index 9112a6a,d9afcf2..0000000
--- a/login.txt
+++ b/login.txt
@@@ -1,1 -1,3 +1,6 @@@
  "Initial login system"
++<<<<<<< HEAD
++=======
+ "Adding OAuth feature to login page"
+ "Fix SQL injection issue"
++>>>>>>> a4445fe (Fixed SQL injection vulnerability)

-----------------------------------------------------------------------------
6. Handling the conflict manually and continuing the cherry pick.

echo "Inital Login system" > login.txt
echo "Fix SQL injection issue" >> login.txt
git add login.txt
git cherry-pick --continue

=> [main c57f784] Fixed SQL injection vulnerability
 Date: Thu Mar 20 13:29:50 2025 +0530
 1 file changed, 2 insertions(+), 1 deletion(-)

-----------------------------------------------------------------------------
7. Verify the commit history

git log --oneline --graph --all

* c57f784 (HEAD -> main) Fixed SQL injection vulnerability
| * a4445fe (oAuth-feature) Fixed SQL injection vulnerability
| * 527832f OAuth Authenitication added
|/
* 8e5eb53 Basic login system

-----------------------------------------------------------------------------

Instead of merging the complete branch (OAuth-feature) we only cherry-picked the bug fix commit.
